// link_toで:remote = > true...ajaxになる
// top#destroyが呼ばれる
// destroy.js.erbが呼ばれる (viewの代わり)


var user_item_id = (<%= @destroy_user_item_id %>);

// マーカーの情報を削除
markers[user_item_id].setMap(null);
delete markers[user_item_id];
var array_index = markers_id_order.indexOf(user_item_id);
markers_id_order.splice(array_index, 1);

// 地図の移動
if (markers_id_order.length > 0){
	var last_marker_id = markers_id_order[markers_id_order.length - 1];
	var last_marker = markers[last_marker_id];
	var last_marker_latlng = last_marker.getPosition();
	var last_marker_lat = last_marker_latlng.lat();
	var last_marker_lng = last_marker_latlng.lng();

	move_map_center(last_marker_lat, last_marker_lng);
};

// リストから消去
$(".ui-id-" + user_item_id).remove(); // 子要素もすべて消去

// 選択中アイテムのgonから要素を消去
var destroy_item_index = $.inArray(user_item_id, gon.user_items_info[2]);
var destroy_item_id = gon.user_items_info[0][destroy_item_index]; // 作業用
gon.user_items_info[0].splice(destroy_item_index, 1);
gon.user_items_info[1].splice(destroy_item_index, 1);
gon.user_items_info[2].splice(destroy_item_index, 1);

// iineボタンにトグル
if (gon.current_item_id == destroy_item_id){
	// アイテムリストから消去される事を考慮
	$('.iine-button').show();
	$('.yokunaine-button').hide();
};

// yokunaineボタンのリクエストを調整
set_current_item_id();

